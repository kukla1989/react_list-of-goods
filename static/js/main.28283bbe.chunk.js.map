{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","handleSortAlphClick","setState","ALPHABET","handleSortLengthClick","LENGTH","handleReverseClick","handleResetClick","this","visibleGoods","goods","sort","goodA","goodB","localeCompare","length","reverse","console","log","getReorderedGoods","className","type","classNames","onClick","map","good","Math","random","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAgDE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,oBAAsB,WACpB,EAAKC,SAAS,CAAEH,SAAUL,EAASS,YAPvC,EAUEC,sBAAwB,WACtB,EAAKF,SAAS,CAAEH,SAAUL,EAASW,UAXvC,EAcEC,mBAAqB,WACnB,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CAAEC,YAAaD,EAAMC,gBAfjD,EAkBES,iBAAmB,WACjB,EAAKL,SAAS,CAAEH,SAAUL,EAASM,KAAMF,YAAY,KAnBzD,4CAsBE,WACE,MAAiCU,KAAKX,MAA9BE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WACZW,EA5DH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNW,EAAY,YAAOC,GAsBzB,OApBAD,EAAaE,MAAK,SAACC,EAAOC,GACxB,OAAQd,GACN,KAAML,EAASS,SACb,OAAOS,EAAME,cAAcD,GAE7B,KAAMnB,EAASW,OACb,OAAQO,EAAMG,OAASF,EAAME,OAE/B,QACE,OAAO,MAITjB,GACFW,EAAaO,UAIfC,QAAQC,IAAInB,EAAUD,GAEfW,EAiCgBU,CACnBxB,EAAiB,CAAEI,WAAUD,eAG/B,OACE,sBAAKsB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,SAAU,UAC9B,CACE,aAAcvB,IAAaL,EAASS,YAGxCoB,QAASf,KAAKP,oBAPhB,iCAYA,wBACEoB,KAAK,SACLD,UAAWE,IAAW,SAAU,aAC9B,CACE,aAAcvB,IAAaL,EAASW,UAGxCkB,QAASf,KAAKJ,sBAPhB,4BAYA,wBACEiB,KAAK,SACLD,UAAWE,IAAW,SAAU,aAC9B,CACE,YAAaxB,IAGjByB,QAASf,KAAKF,mBAPhB,qBAYCR,GAAcC,IAAaL,EAASM,KAEjC,wBACEqB,KAAK,SACLD,UAAU,4BACVG,QAASf,KAAKD,iBAHhB,mBAQA,QAGN,6BACE,6BACGE,EAAae,KAAI,SAAAC,GAAI,OACpB,oBAAwB,UAAQ,OAAhC,SAAwCA,GAA/BC,KAAKC,wBAnF5B,GAAyBC,IAAMC,WC/D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.28283bbe.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((goodA, goodB) => {\n    switch (sortType) {\n      case (SortType.ALPHABET):\n        return goodA.localeCompare(goodB);\n\n      case (SortType.LENGTH):\n        return (goodA.length - goodB.length);\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean;\n  sortType: SortType;\n};\n\n// export const App: React.FC = () => {\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleSortAlphClick = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  handleSortLengthClick = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  handleReverseClick = () => {\n    this.setState(state => ({ isReversed: !state.isReversed }));\n  };\n\n  handleResetClick = () => {\n    this.setState({ sortType: SortType.NONE, isReversed: false });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const visibleGoods = getReorderedGoods(\n      goodsFromServer, { sortType, isReversed },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames('button', 'is-info',\n              {\n                'is-light': !(sortType === SortType.ALPHABET),\n              })}\n            // className=\"button is-info is-light\"\n            onClick={this.handleSortAlphClick}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button', 'is-success',\n              {\n                'is-light': !(sortType === SortType.LENGTH),\n              })}\n            // className=\"button is-success is-light\"\n            onClick={this.handleSortLengthClick}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button', 'is-warning',\n              {\n                'is-light': !isReversed,\n              })}\n            // className=\"button is-warning is-light\"\n            onClick={this.handleReverseClick}\n          >\n            Reverse\n          </button>\n\n          {isReversed || sortType !== SortType.NONE\n            ? (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.handleResetClick}\n              >\n                Reset\n              </button>\n            )\n            : null}\n        </div>\n\n        <ul>\n          <ul>\n            {visibleGoods.map(good => (\n              <li key={Math.random()} data-cy=\"Good\">{good}</li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}